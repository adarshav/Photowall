{"ast":null,"code":"var _jsxFileName = \"E:\\\\code\\\\Project\\\\PhotoWall\\\\my-app\\\\src\\\\components\\\\Main.js\";\n// import React from 'react'\n// import {Route, Link, Switch } from 'react-router-dom'\n// import { connect } from 'react-redux';\n// import { bindActionCreators } from 'redux';\n// import { withRouter } from 'react-router';\n// // import Title from './Title'\n// import Photowall from './photowall'\n// import AddPhoto from './AddPhoto';\n// import Single from './Single';\n// // Actions are used where the action is triggered in our application,here the action is RemovePost where we want to remove the picture in the photowall when remove button is pressed\n// import * as actionCreators from '../redux/actions';\n// class Main extends React.Component {\n//     // this is because calling external server to fetch the data \n//     componentDidMount() {\n//         this.props.startLoadingPost();\n//         this.props.startLoadingComments();\n//     }\n//     // removePhoto(postRemoved) {\n//     //     console.log(postRemoved.description)\n//     //     this.setState((state) => ({\n//     //         posts: state.posts.filter(post => post !== postRemoved )\n//     //     }))\n//     // }\n//     // addPhoto(postSubmitted) {\n//     //     this.setState(state => ({\n//     //         posts: state.posts.concat([postSubmitted])\n//     //     }))\n//     // }\n//     render() {\n//         console.log(this.props.posts);\n//         return ( \n//         <div>\n//             <h1>\n//                 <Link to = '/'>Photowall</Link>\n//             </h1>\n//             <Switch>\n//                 <Route exact path = \"/\" render={() => (\n//                     <div>\n//                         <Photowall {...this.props}/>\n//                         {/* <Photowall posts={this.state.posts} onRemovePhoto={this.removePhoto} onNavigate = {this.navigate}/> */}\n//                     </div>\n//                 )}/> \n//                 <Route path= \"/AddPhoto\" render = {({history}) => (\n//                 <AddPhoto { ...this.props } onHistory = {history}/>\n//                     // this.addPhoto(addedPost)\n//                     // this is done when user posts an image he will be redirected to main page\n//                     // history.push('/')\n//                 )}/>\n//                 {/* here params represents parameters which is an large object, The above 'history' is also one among the params object if we mention params there also we can derive as params.history. */}\n//                 <Route exact path = '/single/:id' render = {(params) => (\n//                     <Single { ...this.props } {...params} />\n//                 )}/>\n//             </Switch>\n//          </div>\n//         )\n//     }\n// }\n// const mapStateToProps = (state) => ({\n//     posts:state.posts,\n//     comments:state.comments\n// })\n// function mapDispachToProps(dispatch) {\n//     return bindActionCreators(actionCreators, dispatch);\n// }\n// export default withRouter(connect(mapStateToProps, mapDispachToProps)(Main));\nimport React, { Component } from 'react';\nimport PhotoWall from './PhotoWall';\nimport AddPhoto from './AddPhoto';\nimport { Route, Link } from 'react-router-dom';\nimport Single from './Single';\n\nclass Main extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true\n    };\n  }\n\n  componentDidMount() {\n    this.props.startLoadingPost().then(() => {\n      this.setState({\n        loading: false\n      });\n    });\n    this.props.startLoadingComments();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 2\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 2\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 2\n      }\n    }, \" Photowall \")), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      render: () => /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 2\n        }\n      }, /*#__PURE__*/React.createElement(PhotoWall, Object.assign({}, this.props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 2\n        }\n      }))),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 2\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/AddPhoto\",\n      render: ({\n        history\n      }) => /*#__PURE__*/React.createElement(AddPhoto, Object.assign({}, this.props, {\n        onHistory: history,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 2\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 2\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/single/:id\",\n      render: params => /*#__PURE__*/React.createElement(Single, Object.assign({\n        loading: this.state.loading\n      }, this.props, params, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 2\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 2\n      }\n    }));\n  }\n\n}\n\nexport default Main;","map":{"version":3,"sources":["E:/code/Project/PhotoWall/my-app/src/components/Main.js"],"names":["React","Component","PhotoWall","AddPhoto","Route","Link","Single","Main","state","loading","componentDidMount","props","startLoadingPost","then","setState","startLoadingComments","render","history","params"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAAQC,KAAR,EAAeC,IAAf,QAA0B,kBAA1B;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AACA,MAAMC,IAAN,SAAmBN,SAAnB,CAA6B;AAAA;AAAA;AAAA,SAE5BO,KAF4B,GAEpB;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAFoB;AAAA;;AAG5BC,EAAAA,iBAAiB,GAAG;AACpB,SAAKC,KAAL,CAAWC,gBAAX,GAA8BC,IAA9B,CAAmC,MAAM;AACzC,WAAKC,QAAL,CAAc;AAACL,QAAAA,OAAO,EAAE;AAAV,OAAd;AACC,KAFD;AAGA,SAAKE,KAAL,CAAWI,oBAAX;AACC;;AACDC,EAAAA,MAAM,GAAG;AACT,wBAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADA,CADA,eAIA,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAApB;AAAwB,MAAA,MAAM,EAAE,mBAChC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACA,oBAAC,SAAD,oBAAe,KAAKL,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADA,CADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJA,eASA,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAE,WAAb;AAAyB,MAAA,MAAM,EAAI,CAAC;AAACM,QAAAA;AAAD,OAAD,kBACnC,oBAAC,QAAD,oBAAc,KAAKN,KAAnB;AAA0B,QAAA,SAAS,EAAEM,OAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATA,eAYA,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,aAAlB;AAAgC,MAAA,MAAM,EAAKC,MAAD,iBAC1C,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,KAAKV,KAAL,CAAWC;AAA5B,SAAyC,KAAKE,KAA9C,EAAyDO,MAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZA,CAFA;AAoBC;;AA9B2B;;AAgC7B,eAAeX,IAAf","sourcesContent":["// import React from 'react'\r\n// import {Route, Link, Switch } from 'react-router-dom'\r\n// import { connect } from 'react-redux';\r\n// import { bindActionCreators } from 'redux';\r\n// import { withRouter } from 'react-router';\r\n\r\n// // import Title from './Title'\r\n// import Photowall from './photowall'\r\n// import AddPhoto from './AddPhoto';\r\n// import Single from './Single';\r\n// // Actions are used where the action is triggered in our application,here the action is RemovePost where we want to remove the picture in the photowall when remove button is pressed\r\n// import * as actionCreators from '../redux/actions';\r\n\r\n// class Main extends React.Component {\r\n//     // this is because calling external server to fetch the data \r\n//     componentDidMount() {\r\n//         this.props.startLoadingPost();\r\n//         this.props.startLoadingComments();\r\n//     }\r\n//     // removePhoto(postRemoved) {\r\n//     //     console.log(postRemoved.description)\r\n//     //     this.setState((state) => ({\r\n//     //         posts: state.posts.filter(post => post !== postRemoved )\r\n//     //     }))\r\n//     // }\r\n\r\n//     // addPhoto(postSubmitted) {\r\n//     //     this.setState(state => ({\r\n//     //         posts: state.posts.concat([postSubmitted])\r\n//     //     }))\r\n//     // }\r\n\r\n//     render() {\r\n//         console.log(this.props.posts);\r\n//         return ( \r\n        \r\n//         <div>\r\n//             <h1>\r\n//                 <Link to = '/'>Photowall</Link>\r\n//             </h1>\r\n//             <Switch>\r\n//                 <Route exact path = \"/\" render={() => (\r\n//                     <div>\r\n//                         <Photowall {...this.props}/>\r\n//                         {/* <Photowall posts={this.state.posts} onRemovePhoto={this.removePhoto} onNavigate = {this.navigate}/> */}\r\n//                     </div>\r\n//                 )}/> \r\n\r\n//                 <Route path= \"/AddPhoto\" render = {({history}) => (\r\n//                 <AddPhoto { ...this.props } onHistory = {history}/>\r\n//                     // this.addPhoto(addedPost)\r\n//                     // this is done when user posts an image he will be redirected to main page\r\n//                     // history.push('/')\r\n//                 )}/>\r\n//                 {/* here params represents parameters which is an large object, The above 'history' is also one among the params object if we mention params there also we can derive as params.history. */}\r\n//                 <Route exact path = '/single/:id' render = {(params) => (\r\n//                     <Single { ...this.props } {...params} />\r\n//                 )}/>\r\n//             </Switch>\r\n            \r\n//          </div>\r\n//         )\r\n//     }\r\n\r\n// }\r\n// const mapStateToProps = (state) => ({\r\n//     posts:state.posts,\r\n//     comments:state.comments\r\n// })\r\n// function mapDispachToProps(dispatch) {\r\n//     return bindActionCreators(actionCreators, dispatch);\r\n// }\r\n\r\n// export default withRouter(connect(mapStateToProps, mapDispachToProps)(Main));\r\n\r\n\r\nimport React, {Component} from 'react'\r\nimport PhotoWall from './PhotoWall'\r\nimport AddPhoto from './AddPhoto'\r\nimport {Route, Link} from 'react-router-dom'\r\nimport Single from './Single'\r\nclass Main extends Component {\r\n \r\n state = { loading: true }\r\n componentDidMount() {\r\n this.props.startLoadingPost().then(() => {\r\n this.setState({loading: false})\r\n })\r\n this.props.startLoadingComments()\r\n }\r\n render() {\r\n return ( \r\n \r\n <div>\r\n <h1> \r\n <Link to=\"/\"> Photowall </Link> \r\n </h1>\r\n <Route exact path = \"/\" render={() => (\r\n <div>\r\n <PhotoWall {...this.props} /> \r\n </div>\r\n )}/> \r\n <Route path= \"/AddPhoto\" render = {({history}) => (\r\n <AddPhoto {...this.props} onHistory={history}/>\r\n )}/>\r\n <Route exact path=\"/single/:id\" render = {(params) => (\r\n <Single loading={this.state.loading} {...this.props} {...params}/> \r\n )}/>\r\n \r\n </div>\r\n )\r\n }\r\n}\r\nexport default Main"]},"metadata":{},"sourceType":"module"}