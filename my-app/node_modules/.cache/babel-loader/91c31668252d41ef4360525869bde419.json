{"ast":null,"code":"var _jsxFileName = \"E:\\\\code\\\\Project\\\\PhotoWall\\\\my-app\\\\src\\\\components\\\\Main.js\";\nimport React from 'react';\nimport { Route, Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { withRouter } from 'react-router'; // import Title from './Title'\n\nimport Photowall from './photowall';\nimport AddPhoto from './AddPhoto'; // Actions are used where the action is triggered in our application,here the action is RemovePost where we want to remove the picture in the photowall when remove button is pressed\n\nimport * as actionCreators from '../redux/actions';\n\nclass Main extends React.Component {\n  // removePhoto(postRemoved) {\n  //     console.log(postRemoved.description)\n  //     this.setState((state) => ({\n  //         posts: state.posts.filter(post => post !== postRemoved )\n  //     }))\n  // }\n  // addPhoto(postSubmitted) {\n  //     this.setState(state => ({\n  //         posts: state.posts.concat([postSubmitted])\n  //     }))\n  // }\n  render() {\n    console.log(this.props.posts);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }\n    }, \"Photowall\")), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      render: () => /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 18\n        }\n      }, /*#__PURE__*/React.createElement(Photowall, Object.assign({}, this.props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 23\n        }\n      }))),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/create\",\n      render: ({\n        history\n      }) => /*#__PURE__*/React.createElement(AddPhoto, Object.assign({}, this.props, {\n        onHistory: history,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }\n      })) // this.addPhoto(addedPost)\n      // this is done when user posts an image he will be redirected to main page\n      // history.push('/')\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  posts: state\n});\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators(actionCreators, dispatch);\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));","map":{"version":3,"sources":["E:/code/Project/PhotoWall/my-app/src/components/Main.js"],"names":["React","Route","Link","connect","bindActionCreators","withRouter","Photowall","AddPhoto","actionCreators","Main","Component","render","console","log","props","posts","history","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,EAAeC,IAAf,QAA0B,kBAA1B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SAASC,UAAT,QAA2B,cAA3B,C,CAEA;;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,QAAP,MAAqB,YAArB,C,CACA;;AACA,OAAO,KAAKC,cAAZ,MAAgC,kBAAhC;;AAEA,MAAMC,IAAN,SAAmBT,KAAK,CAACU,SAAzB,CAAmC;AAE/B;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEAC,EAAAA,MAAM,GAAG;AACLC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWC,KAAvB;AACA,wBAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAG,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,CADJ,eAII,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAApB;AAAwB,MAAA,MAAM,EAAE,mBAC3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACK,oBAAC,SAAD,oBAAe,KAAKD,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADL,CADL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,eAWI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAE,SAAb;AAAuB,MAAA,MAAM,EAAI,CAAC;AAACE,QAAAA;AAAD,OAAD,kBAC7B,oBAAC,QAAD,oBAAe,KAAKF,KAApB;AAA4B,QAAA,SAAS,EAAIE,OAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAD6B,CAEzB;AACA;AACA;AAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXJ,CAFA;AAqBH;;AAtC8B;;AAyCnC,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAChCH,EAAAA,KAAK,EAAEG;AADyB,CAAZ,CAAxB;;AAIA,SAASC,kBAAT,CAA4BC,QAA5B,EAAsC;AAClC,SAAOhB,kBAAkB,CAACI,cAAD,EAAiBY,QAAjB,CAAzB;AACH;;AAED,eAAef,UAAU,CAACF,OAAO,CAACc,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CV,IAA7C,CAAD,CAAzB","sourcesContent":["import React from 'react'\r\nimport {Route, Link} from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { withRouter } from 'react-router';\r\n\r\n// import Title from './Title'\r\nimport Photowall from './photowall'\r\nimport AddPhoto from './AddPhoto';\r\n// Actions are used where the action is triggered in our application,here the action is RemovePost where we want to remove the picture in the photowall when remove button is pressed\r\nimport * as actionCreators from '../redux/actions';\r\n\r\nclass Main extends React.Component {\r\n\r\n    // removePhoto(postRemoved) {\r\n    //     console.log(postRemoved.description)\r\n    //     this.setState((state) => ({\r\n    //         posts: state.posts.filter(post => post !== postRemoved )\r\n    //     }))\r\n    // }\r\n\r\n    // addPhoto(postSubmitted) {\r\n    //     this.setState(state => ({\r\n    //         posts: state.posts.concat([postSubmitted])\r\n    //     }))\r\n    // }\r\n\r\n    render() {\r\n        console.log(this.props.posts);\r\n        return ( \r\n        \r\n        <div>\r\n            <h1>\r\n                <Link to = '/'>Photowall</Link>\r\n            </h1>\r\n            <Route exact path = \"/\" render={() => (\r\n                 <div>\r\n                      <Photowall {...this.props}/>\r\n                      {/* <Photowall posts={this.state.posts} onRemovePhoto={this.removePhoto} onNavigate = {this.navigate}/> */}\r\n                 </div>\r\n            )}/> \r\n\r\n            <Route path= \"/create\" render = {({history}) => (\r\n                <AddPhoto { ...this.props } onHistory = {history}/>\r\n                    // this.addPhoto(addedPost)\r\n                    // this is done when user posts an image he will be redirected to main page\r\n                    // history.push('/')\r\n            )}/>\r\n         </div>\r\n        )\r\n    }\r\n\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    posts: state\r\n})\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return bindActionCreators(actionCreators, dispatch)\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));"]},"metadata":{},"sourceType":"module"}