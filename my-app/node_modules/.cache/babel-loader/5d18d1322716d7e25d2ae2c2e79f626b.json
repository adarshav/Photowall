{"ast":null,"code":"var _jsxFileName = \"E:\\\\code\\\\Project\\\\PhotoWall\\\\my-app\\\\src\\\\components\\\\Main.js\";\nimport React from 'react';\nimport { Route, Link, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { withRouter } from 'react-router'; // import Title from './Title'\n\nimport Photowall from './photowall';\nimport AddPhoto from './AddPhoto';\nimport Single from './Single'; // Actions are used where the action is triggered in our application,here the action is RemovePost where we want to remove the picture in the photowall when remove button is pressed\n\nimport * as actionCreators from '../redux/actions';\n\nclass Main extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true\n    };\n  }\n\n  // this is because calling external server to fetch the data \n  componentDidMount() {\n    this.props.startLoadingPost().then(() => {\n      this.setState({\n        loading: false\n      });\n    });\n    this.props.startLoadingComments();\n  } // removePhoto(postRemoved) {\n  //     console.log(postRemoved.description)\n  //     this.setState((state) => ({\n  //         posts: state.posts.filter(post => post !== postRemoved )\n  //     }))\n  // }\n  // addPhoto(postSubmitted) {\n  //     this.setState(state => ({\n  //         posts: state.posts.concat([postSubmitted])\n  //     }))\n  // }\n\n\n  render() {\n    console.log(this.props.posts);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }\n    }, \"Photowall\")), /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      render: () => /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Photowall, Object.assign({}, this.props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 25\n        }\n      }))),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/AddPhoto\",\n      render: ({\n        history\n      }) => /*#__PURE__*/React.createElement(AddPhoto, Object.assign({}, this.props, {\n        onHistory: history,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }\n      })) // this.addPhoto(addedPost)\n      // this is done when user posts an image he will be redirected to main page\n      // history.push('/')\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/single/:id\",\n      render: params => /*#__PURE__*/React.createElement(Single, Object.assign({\n        loading: this.state.loading\n      }, this.props, params, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  posts: state.posts,\n  comments: state.comments\n});\n\nfunction mapDispachToProps(dispatch) {\n  return bindActionCreators(actionCreators, dispatch);\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispachToProps)(Main)); // import React, {Component} from 'react'\n// import PhotoWall from './photowall'\n// import AddPhoto from './AddPhoto'\n// import {Route, Link} from 'react-router-dom'\n// import Single from './Single'\n// class Main extends Component {\n//  state = { loading: true }\n//  componentDidMount() {\n//  this.props.startLoadingPost().then(() => {\n//  this.setState({loading: false})\n//  })\n//  this.props.startLoadingComments()\n//  }\n//  render() {\n//  return ( \n//  <div>\n//  <h1> \n//  <Link to=\"/\"> Photowall </Link> \n//  </h1>\n//  <Route exact path = \"/\" render={() => (\n//  <div>\n//  <PhotoWall {...this.props} /> \n//  </div>\n//  )}/> \n//  <Route path= \"/AddPhoto\" render = {({history}) => (\n//  <AddPhoto {...this.props} onHistory={history}/>\n//  )}/>\n//  <Route exact path=\"/single/:id\" render = {(params) => (\n//  <Single loading={this.state.loading} {...this.props} {...params}/> \n//  )}/>\n//  </div>\n//  )\n//  }\n// }\n// export default Main","map":{"version":3,"sources":["E:/code/Project/PhotoWall/my-app/src/components/Main.js"],"names":["React","Route","Link","Switch","connect","bindActionCreators","withRouter","Photowall","AddPhoto","Single","actionCreators","Main","Component","state","loading","componentDidMount","props","startLoadingPost","then","setState","startLoadingComments","render","console","log","posts","history","params","mapStateToProps","comments","mapDispachToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport {Route, Link, Switch } from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { withRouter } from 'react-router';\r\n\r\n// import Title from './Title'\r\nimport Photowall from './photowall'\r\nimport AddPhoto from './AddPhoto';\r\nimport Single from './Single';\r\n// Actions are used where the action is triggered in our application,here the action is RemovePost where we want to remove the picture in the photowall when remove button is pressed\r\nimport * as actionCreators from '../redux/actions';\r\n\r\nclass Main extends React.Component {\r\n\r\n    state = {loading: true}\r\n    // this is because calling external server to fetch the data \r\n    componentDidMount() {\r\n        this.props.startLoadingPost().then(() => {\r\n            this.setState({loading:false})\r\n        });\r\n        this.props.startLoadingComments();\r\n    }\r\n    // removePhoto(postRemoved) {\r\n    //     console.log(postRemoved.description)\r\n    //     this.setState((state) => ({\r\n    //         posts: state.posts.filter(post => post !== postRemoved )\r\n    //     }))\r\n    // }\r\n\r\n    // addPhoto(postSubmitted) {\r\n    //     this.setState(state => ({\r\n    //         posts: state.posts.concat([postSubmitted])\r\n    //     }))\r\n    // }\r\n\r\n    render() {\r\n        console.log(this.props.posts);\r\n        return ( \r\n        \r\n        <div>\r\n            <h1>\r\n                <Link to = '/'>Photowall</Link>\r\n            </h1>\r\n            <Switch>\r\n                <Route exact path = \"/\" render={() => (\r\n                    <div>\r\n                        <Photowall {...this.props}/>\r\n                        {/* <Photowall posts={this.state.posts} onRemovePhoto={this.removePhoto} onNavigate = {this.navigate}/> */}\r\n                    </div>\r\n                )}/> \r\n\r\n                <Route path= \"/AddPhoto\" render = {({history}) => (\r\n                <AddPhoto { ...this.props } onHistory = {history}/>\r\n                    // this.addPhoto(addedPost)\r\n                    // this is done when user posts an image he will be redirected to main page\r\n                    // history.push('/')\r\n                )}/>\r\n                {/* here params represents parameters which is an large object, The above 'history' is also one among the params object if we mention params there also we can derive as params.history. */}\r\n                <Route exact path = '/single/:id' render = {(params) => (\r\n                    <Single loading = {this.state.loading} { ...this.props } {...params} />\r\n                )}/>\r\n            </Switch>\r\n            \r\n         </div>\r\n        )\r\n    }\r\n\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    posts:state.posts,\r\n    comments:state.comments\r\n})\r\nfunction mapDispachToProps(dispatch) {\r\n    return bindActionCreators(actionCreators, dispatch);\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispachToProps)(Main));\r\n\r\n\r\n// import React, {Component} from 'react'\r\n// import PhotoWall from './photowall'\r\n// import AddPhoto from './AddPhoto'\r\n// import {Route, Link} from 'react-router-dom'\r\n// import Single from './Single'\r\n// class Main extends Component {\r\n \r\n//  state = { loading: true }\r\n//  componentDidMount() {\r\n//  this.props.startLoadingPost().then(() => {\r\n//  this.setState({loading: false})\r\n//  })\r\n//  this.props.startLoadingComments()\r\n//  }\r\n//  render() {\r\n//  return ( \r\n \r\n//  <div>\r\n//  <h1> \r\n//  <Link to=\"/\"> Photowall </Link> \r\n//  </h1>\r\n//  <Route exact path = \"/\" render={() => (\r\n//  <div>\r\n//  <PhotoWall {...this.props} /> \r\n//  </div>\r\n//  )}/> \r\n//  <Route path= \"/AddPhoto\" render = {({history}) => (\r\n//  <AddPhoto {...this.props} onHistory={history}/>\r\n//  )}/>\r\n//  <Route exact path=\"/single/:id\" render = {(params) => (\r\n//  <Single loading={this.state.loading} {...this.props} {...params}/> \r\n//  )}/>\r\n \r\n//  </div>\r\n//  )\r\n//  }\r\n// }\r\n// export default Main"]},"metadata":{},"sourceType":"module"}