{"ast":null,"code":"var _jsxFileName = \"E:\\\\code\\\\Project\\\\PhotoWall\\\\my-app\\\\src\\\\components\\\\photowall.js\";\nimport React from 'react';\nimport propTypes from 'prop-types';\nimport Photo from './photo';\n\nconst Photowall = ({\n  posts,\n  onRemovePhoto\n}) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"photo-grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }\n  }, posts.map((post, index) => /*#__PURE__*/React.createElement(Photo, {\n    key: index,\n    post: post,\n    onRemovePhoto: onRemovePhoto,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 47\n    }\n  })));\n}; // This flexibility is awesome but could also cause some problems. If I’m using a component written by another developer I have to figure out what props that component want, what’s required and also the correct type. React has a solution for this and its called propTypes. PropTypes defines type and which props are required. This benefits the future you and other developer using your component in two ways:\n// 1. You can easily open up a component and check which props are required and what type they should be.\n// 2. When things get messed up React will give you an awesome error message in the console, saying which props is wrong/missing plus the render method that caused the problem.\n\n\nPhotowall.PropTypes = {\n  // totally there are two props which is pushed from Main.js i.e posts & onRemovePhoto\n  // the below line says the posts prop should always be in array type and is is required [mandatory]\n  posts: propTypes.array.isRequired,\n  onRemovePhoto: propTypes.func.isRequired\n};\nexport default Photowall;","map":{"version":3,"sources":["E:/code/Project/PhotoWall/my-app/src/components/photowall.js"],"names":["React","propTypes","Photo","Photowall","posts","onRemovePhoto","map","post","index","PropTypes","array","isRequired","func"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,KAAP,MAAkB,SAAlB;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KAA8B;AAC5C,sBACI;AAAK,IAAA,SAAS,EAAG,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEWD,KAAK,CAACE,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,kBAAiB,oBAAC,KAAD;AAAO,IAAA,GAAG,EAAKA,KAAf;AAAuB,IAAA,IAAI,EAAID,IAA/B;AAAqC,IAAA,aAAa,EAAKF,aAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA3B,CAFX,CADJ;AAOH,CARD,C,CASA;AAEA;AACA;;;AACAF,SAAS,CAACM,SAAV,GAAsB;AAClB;AACA;AACAL,EAAAA,KAAK,EAACH,SAAS,CAACS,KAAV,CAAgBC,UAHJ;AAIlBN,EAAAA,aAAa,EAACJ,SAAS,CAACW,IAAV,CAAeD;AAJX,CAAtB;AAOA,eAAeR,SAAf","sourcesContent":["import React from 'react';\r\nimport propTypes from 'prop-types';\r\n\r\nimport Photo from './photo';\r\n\r\nconst Photowall = ({ posts, onRemovePhoto }) => {\r\n    return(\r\n        <div className = \"photo-grid\">\r\n               {\r\n                   posts.map((post, index) => <Photo key = { index } post = {post} onRemovePhoto = { onRemovePhoto } />)\r\n               }\r\n            </div>\r\n    )\r\n}\r\n// This flexibility is awesome but could also cause some problems. If I’m using a component written by another developer I have to figure out what props that component want, what’s required and also the correct type. React has a solution for this and its called propTypes. PropTypes defines type and which props are required. This benefits the future you and other developer using your component in two ways:\r\n\r\n// 1. You can easily open up a component and check which props are required and what type they should be.\r\n// 2. When things get messed up React will give you an awesome error message in the console, saying which props is wrong/missing plus the render method that caused the problem.\r\nPhotowall.PropTypes = {\r\n    // totally there are two props which is pushed from Main.js i.e posts & onRemovePhoto\r\n    // the below line says the posts prop should always be in array type and is is required [mandatory]\r\n    posts:propTypes.array.isRequired,\r\n    onRemovePhoto:propTypes.func.isRequired\r\n}\r\n\r\nexport default Photowall;"]},"metadata":{},"sourceType":"module"}